<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>mock-jdk-platform-logging</artifactId>
  <build>
    <defaultGoal>clean verify</defaultGoal>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.4.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <rules>
            <requireJavaVersion>
              <version>[${java.version},)</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>[3.9.0,)</version>
            </requireMavenVersion>
          </rules>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <id>enforce-maven</id>
          </execution>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <id>enforce-clean</id>
            <phase>pre-clean</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.5.0</version>
      </plugin>
      <plugin>
        <artifactId>flatten-maven-plugin</artifactId>
        <configuration>
          <flattenMode>ossrh</flattenMode>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>flatten</goal>
            </goals>
            <id>flatten</id>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <goals>
              <goal>clean</goal>
            </goals>
            <id>clean</id>
            <phase>clean</phase>
          </execution>
        </executions>
        <groupId>org.codehaus.mojo</groupId>
        <version>1.6.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <propertiesEncoding>ISO-8859-1</propertiesEncoding>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.3.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <release>${java.version}</release>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.13.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <properties>
            <groups>fast</groups>
          </properties>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.3.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Created-By>${java.vm.version} (${java.vm.vendor})</Created-By>
              <Name>${project.name}</Name>
            </manifestEntries>
          </archive>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.4.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!--
          <classpathDependencyExcludes>
            <classpathDependencyExclude>com.ocarlsen.test:mock-slf4j-impl
            </classpathDependencyExclude>
          </classpathDependencyExcludes>
          -->
          <forkCount>1</forkCount>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <properties>
            <groups>slow</groups>
          </properties>
          <reuseForks>false</reuseForks>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.3.1</version>
      </plugin>
      <plugin>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
            </configuration>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <id>prepare-agent</id>
          </execution>
          <execution>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <id>prepare-agent-integration</id>
          </execution>
          <execution>
            <configuration>
              <destFile>${project.build.directory}/jacoco.exec</destFile>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
            </configuration>
            <goals>
              <goal>merge</goal>
            </goals>
            <id>merge-results</id>
            <phase>verify</phase>
          </execution>
          <execution>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
            <goals>
              <goal>report</goal>
            </goals>
            <id>report</id>
            <phase>verify</phase>
          </execution>
          <execution>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>COMPLEXITY</counter>
                      <minimum>0.72</minimum>
                      <value>COVEREDRATIO</value>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
            <id>check-coverage</id>
            <phase>verify</phase>
          </execution>
        </executions>
        <groupId>org.jacoco</groupId>
        <version>0.8.12</version>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <artifactId>mockito-core</artifactId>
      <groupId>org.mockito</groupId>
      <scope>provided</scope>
      <version>${mockito.version}</version>
    </dependency>
    <dependency>
      <artifactId>annotations</artifactId>
      <groupId>org.jetbrains</groupId>
      <scope>provided</scope>
      <version>24.1.0</version>
    </dependency>
    <!-- test -->
    <dependency>
      <artifactId>junit-jupiter-api</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>${junit-jupiter.version}</version>
    </dependency>
    <dependency>
      <artifactId>junit-jupiter-engine</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>${junit-jupiter.version}</version>
    </dependency>
    <dependency>
      <artifactId>mockito-junit-jupiter</artifactId>
      <groupId>org.mockito</groupId>
      <scope>test</scope>
      <version>${mockito.version}</version>
    </dependency>
    <dependency>
      <artifactId>hamcrest</artifactId>
      <groupId>org.hamcrest</groupId>
      <scope>test</scope>
      <version>2.2</version>
    </dependency>
  </dependencies>
  <description>JDK Platform Logging Service with mock Loggers backed by Mockito.</description>
  <developers>
    <developer>
      <email>vitalij_r2@outlook.com</email>
      <id>vitalijr2</id>
      <name>Vitalij Berdinskih</name>
      <timezone>Europe/Kyiv</timezone>
      <url>https://github.com/vitalijr2</url>
    </developer>
  </developers>
  <groupId>io.github.vitalijr2.logging</groupId>
  <inceptionYear>2024</inceptionYear>
  <licenses>
    <license>
      <comments>See NOTICE for third-party licenses.</comments>
      <distribution>repo</distribution>
      <name>Apache 2</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <modelVersion>4.0.0</modelVersion>
  <name>Mock of JDK Platform Logging</name>
  <properties>
    <java.version>11</java.version>
    <junit-jupiter.version>5.10.2</junit-jupiter.version>
    <mockito.version>5.12.0</mockito.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <version>1.0.0-SNAPSHOT</version>
</project>